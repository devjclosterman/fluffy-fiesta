abs(): Returns the absolute value of a number.
all(): Returns True if all elements of the iterable are true (or if the iterable is empty).
any(): Returns True if any element of the iterable is true. If the iterable is empty, it returns False.
bin(): Converts an integer to a binary string prefixed with "0b".
bool(): Returns the boolean value of an object.
callable(): Returns True if the object appears callable (i.e., can be called), False otherwise.
chr(): Returns a character (a string of length 1) from an integer representing its Unicode code point.
classmethod(): Returns a class method from a function.
compile(): Compiles the source into a code or AST object.
complex(): Returns a complex number with the value real + imag*1j.
delattr(): Deletes the named attribute from the object.
dict(): Creates a new dictionary.
dir(): Returns a list of valid attributes of the specified object.
divmod(): Returns a tuple of the quotient and remainder of dividing two numbers.
enumerate(): Returns an enumerate object. It adds a counter to an iterable and returns it in a form of an enumerate object.
eval(): Evaluates a string as a Python expression.
exec(): Executes the Python code dynamically.
filter(): Filters elements from an iterable.
float(): Returns a floating-point number constructed from a number or a string.
format(): Formats a specified value.
frozenset(): Returns an immutable set.
getattr(): Returns the value of the named attribute of an object.
globals(): Returns the current global symbol table as a dictionary.
hasattr(): Returns True if the object has the given attribute, False otherwise.
hash(): Returns the hash value of an object if it has one.
help(): Invokes the built-in help system.
hex(): Converts an integer to a hexadecimal string prefixed with "0x".
id(): Returns the identity of an object.
input(): Reads a line from input, converts it to a string (stripping a trailing newline), and returns that.
int(): Returns an integer object constructed from a number or string.
isinstance(): Returns True if the specified object is an instance of the specified type.
issubclass(): Returns True if the specified object is a subclass of the specified object.
iter(): Returns an iterator object.
len(): Returns the length (the number of items) of an object.
list(): Returns a list.
locals(): Returns the current local symbol table as a dictionary.
map(): Applies a function to all the items in an input list.
max(): Returns the largest item in an iterable or the largest of two or more arguments.
memoryview(): Returns a memory view object.
min(): Returns the smallest item in an iterable or the smallest of two or more arguments.
next(): Retrieves the next item from the iterator.
object(): Returns a new featureless object.
oct(): Converts an integer to an octal string prefixed with "0o".
open(): Opens a file and returns a corresponding file object.
ord(): Returns an integer representing the Unicode character.
pow(): Returns a number raised to a power.
print(): Prints objects to the text stream file, separated by sep, and followed by the end.
property(): Returns a property attribute.
range(): Returns an immutable sequence of numbers.
repr(): Returns a string representation of an object.
reversed(): Returns a reverse iterator.
round(): Rounds a floating-point number to a specified number of decimals.
set(): Returns a new set object.
setattr(): Sets the value of the named attribute of an object.
slice(): Returns a slice object.
sorted(): Returns a sorted list of the specified iterable object.
staticmethod(): Returns a static method for a function.
str(): Returns a string object.
sum(): Sums the items of an iterable.
super(): Returns a proxy object that delegates method calls to a parent or sibling class of type.
tuple(): Returns a tuple.
type(): Returns the type of the object.
vars(): Returns the __dict__ attribute of the given object.
zip(): Returns an iterator of tuples where the i-th tuple contains the i-th element from each of the argument sequences or iterables.